function [bls] = blinkingstim(BLSp, OLDSTIM)

% [BLS] = BLINKINGSTIM(BLSp)
%
%  Blinks all squares of an imaginary grid on the screen.  BLSp can
%  either be the string 'graphical' (in which case the user is
%  prompted for the remaining parameters), the string 'default' (in which case
%  default parameter values are used) or it can be a structure as described
%  below.  
%
%  One may also use
%    
%  [BLS] = BLINKINGSTIM('graphical',OLDBLS)
%
%  which will offer the parameters of OLDBLS as the initial values
%  for BLS.
%
%  The parameters for the BLSp structure are as follows:
%
%  BG -         1x3  RGB color of background.
%  value -      1x3  RGB color of hilighted square
%  random -     1x1  0/1 Should the order of presentation be random (otherwise sequential)?
%  repeat -     1x1  Number of times to repeat showing each square.
%  fps -        1x1  The data frame rate to try to match; if less than 0, then take bgpause
%                        as absolute times to try to achieve
%  bgpause      1x1 If fps >0, then this the number of data frames to pause
%                 OR
%               1x2 If fps <0, then it should be 1x2, bgpause(1) is the amount of time (in seconds)
%                   to display each data frame, and bgpause(2) is the amount of time (in seconds)
%                   to pause between frames.
%  rect -       1x4  The rectangle on the screen where the stimulus
%                    should be shown.
%                    Use [topleft_x topleft_y botright_x botright_y].
%  pixSize -    1x2  pixSize = [X Y], where X and Y are the width
%               and height of each grid square.  Use values less
%               than 1 to use the fraction of the whole rectangle
%               instead. (ex: [25 25])
%  randState -  35x1 Random state to use (ex: rand('state'))
%  dispprefs -  cell displayprefs options (or use '{}' for defaults)
%
%                              Questions to vanhoosr@brandeis.edu

NewStimListAdd('blinkingstim');

if nargin==0,
	bls = blinkingstim('default');
	return;
end;

default_p = struct('BG',[ 0 0 0],'value',[255 255 255],'random',0, ...  % EDIT THIS LIST
              'repeat',1,'bgpause',0,'fps',3,'rect',[100 100 200 200], ...
              'pixSize',[50 50],'randState',rand('state'));
default_p.dispprefs = {};


finish = 1;

if nargin==1,oldstim=[]; else, oldstim = OLDSTIM; end;

if ischar(BLSp),
	if strcmp(BLSp,'graphical'),
		p = get_graphical_input(oldstim);
		if isempty(p), finish = 0; else, BLSp = p; end;
	elseif strcmp(BLSp,'default'),
		BLSp = default_p;
	else,% there is an error
		error('Unknown string input to blinkingstim.');
	end;
else, % a structure
	[good,errormsg]=verify(BLSp);
	if ~good, error(['Could not create blinkingstim: ' errormsg]); end;
end;

if finish,
	dp = {'fps',BLSp.fps,'rect',BLSp.rect,'frames',[],BLSp.dispprefs{:}};
	s = stimulus(5);
        blsp = struct('BG',BLSp.BG,'value',BLSp.value,'random',BLSp.random,...
   	   'repeat',BLSp.repeat,'bgpause',BLSp.bgpause,'fps',BLSp.fps,...
	   'rect',BLSp.rect,'pixSize',BLSp.pixSize,'randState',BLSp.randState);
        blsp.dispprefs = BLSp.dispprefs;
	% had to fix b/c matlab is fussy about order of parameters
	bls = class(blsp,'blinkingstim',s);
	bls.stimulus = setdisplayprefs(bls.stimulus,displayprefs(dp));
else,
	bls = [];
end;

function params = get_graphical_input(oldstim)  % EDIT GET GRAPHICAL INPUT SO THAT IT ASKS FOR THE RIGHT THINGS

if isempty(oldstim),
        rect_str =  '[100 100 200 200]';
        bg_str =    '[0 0 0]';
        value_str ='[255 255 255]';
        pixSize_str='[50 50]';
        repeat_str =  '1';
        fps_str =   '3';
	bgpause_str = '0';
	rand_val = 1;
        rs_str =    'rand(''state'')';
        dp_str =    '{}';
else,
        BLSparams = struct(oldstim);
        rect_str = mat2str(BLSparams.rect);
        bg_str = mat2str(BLSparams.BG);
        value_str = mat2str(BLSparams.value);
        pixSize_str = mat2str(BLSparams.pixSize);
	bgpause_str = num2str(BLSparams.bgpause);
        repeat_str = num2str(BLSparams.repeat);
	rand_val = BLSparams.random+1;
        fps_str = num2str(BLSparams.fps);
        rs_str = '<copied from previous stim>';
        dp_str = wimpcell2str(BLSparams.dispprefs);
end;


h0 = figure('Color',[0.8 0.8 0.8], 'Position',[165   376   488   541]);
settoolbar(h0,'none');
set(h0,'menubar','none');

sh = 340.8 - 313.6;

ok_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'Callback','set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[36 22 71 27], ...
        'String','OK', ...
        'Tag','Pushbutton1', ...
        'UserData',0);
cancel_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'Callback','set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[173 24 71 27], ...
        'String','Cancel', ...
        'Tag','Pushbutton1', ...
        'UserData',0);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'Callback',...
	'textbox(''blinkingstim help'',help(''blinkingstim''));', ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[304 25 71 27], ...
        'String','Help', ...
        'Tag','Pushbutton1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',18, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[51.2 382.4+sh 284.8 24.8], ...
        'String','New blinkingstim object...', ...
        'Style','text', ...
        'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[31.2 340.8+sh 216 19.2], ...
        'String','[1x4] Rect [top_x top_y bottom_x bottom_y]', ...
        'Style','text', ...
        'Tag','StaticText2');
rect_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[255.2 344.8+sh 124 18.4], ...
        'String',rect_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[31.2 313.6+sh 216 19.2], ...
        'String','[1x3] background color [r g b], in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
bg_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[256 320+sh 124 18.4], ...
        'String',bg_str, ...
        'Style','edit', ...
        'Tag','EditText1');
value_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[255.2 294.4+sh 123.2 20.8], ...
        'String',value_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[31.2 288+sh 187.2 19.2], ...
        'String','[1x3] square value [r g b], in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
pixSize_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[319.2 267.2+sh 57.6 21.6], ...
        'String',pixSize_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[26.4 260+sh 277.6 21.6], ...
        'String','[1x2] pixSize (size of grid squares, [ X Y], or faction if X,Y<1', ...
        'Style','text', ...
        'Tag','StaticText2');
repeat_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[319.2 239.2+sh 30.4 18.4], ...
        'String',repeat_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[31.2 234.4+sh 200 19.2], ...
        'String','[1x1] Repeat how many times?', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[31.2 236 319-5-31 19.2], ...
        'String','[1x1] frames/second (if <0, then pause is [on off] in seconds)', ...
        'Style','text', ...
        'Tag','StaticText2');
fps_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[319.2 240 36.8 18.4], ...
        'String',fps_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25.6 144.8 344 19.2], ...
        'String','[35x1] randomState: use rand(''state'') or enter a variable name', ...
        'Style','text', ...
        'Tag','StaticText2');
rs_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[29.6 122.4 343.2 22.4], ...
        'String',rs_str,...
        'Style','edit', ...
        'Tag','EditText1');
dp_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[29.6 75.2 343.2 22.4], ...
        'String',dp_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25.6 97.6 344 19.2], ...
        'String','Set any displayprefs options here: example: {''BGpretime'',1}', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[28 205.6 277.6 21.6], ...
        'String','[1x1] Number of frames to pause between blinks', ...
        'Style','text', ...
        'Tag','StaticText2');
bgpause_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[319.2 210.4 57.6 21.6], ...
        'String',bgpause_str, ...
        'Style','edit', ...
        'Tag','EditText1');
rand_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.701960784313725 0.701960784313725 0.701960784313725], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[225.6 179.2 109.6 20], ...
        'String',{'sequential','random'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',rand_val);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[37.6 180 180.8 19.2], ...
        'String','Sequential or random mode?', ...
        'Style','text', ...
        'Tag','StaticText3');

% check for errors

error_free = 0;

sgsp = [];

while ~error_free,
        drawnow;
        uiwait(h0);

   if get(cancel_ctl,'userdata')==1,
        error_free = 1;
   else, % it was OK

        rect_str = get(rect_ctl,'String'); bg_str = get(bg_ctl,'String');
        value_str=get(value_ctl,'String');pixSize_str=get(pixSize_ctl,'String');
	repeat_str = get(repeat_ctl,'String'); rand_val=get(rand_ctl,'Value');
        fps_str = get(fps_ctl,'String'); rs_str = get(rs_ctl,'String');
	bgpause_str = get(bgpause_ctl,'String'); dp_str = get(dp_ctl,'String');

   so = 1; % syntax_okay;
   random = rand_val - 1;
   try, rect = eval(rect_str);
        catch, errordlg('Syntax error in Rect');so=0; end;
   try, bg = eval(bg_str);
        catch, errordlg('Syntax error in BG');so=0; end;
   try, bgpause = eval(bgpause_str);
	catch, errordlg('Syntax error in bgpause');so=0; end;
   try, value=eval(value_str);
        catch, errordlg('Syntax error in values');so=0;end
   try, pixSize=eval(pixSize_str);
        catch, errordlg('Syntax error in pixsize');so=0; end;
   try, repeat = eval(repeat_str);
        catch, errordlg('Syntax error in repeat'); so=0; end;
   try, fps=eval(fps_str);
        catch, errordlg('Syntax error in fps'); so=0; end;
   if strcmp(rs_str,'<copied from previous stim>')&~isempty(oldstim),
        randState = BLSparams.randState;
   else,
           try, randState=eval(rs_str);
                catch, errordlg('Syntax error in randState');so=0;end
   end;
   try, dp=eval(dp_str);
        catch, errordlg('Syntax error in displayprefs'); so=0;end;

   if so,

        blsp = struct('BG',bg,'value',value,'random',random,'repeat',repeat,...
		'bgpause',bgpause,'fps',fps,'rect',rect,'pixSize',pixSize,...
		'randState',randState);
        blsp.dispprefs = dp;

        [good, err] = verify(blsp);
        if ~good, errordlg(['Parameter value invalid: ' err]);
		  set(ok_ctl,'userdata',0);
        else, error_free = 1; end;
   else, set(ok_ctl,'userdata',0);
   end;
   end;
end;

if get(ok_ctl,'userdata')==1, params = blsp; else, params = []; end;
delete(h0);

function str = wimpcell2str(theCell)
 %1-dim cells only, only chars and matricies
str = '{  ';
for i=1:length(theCell),
        if ischar(theCell{i})
                str = [str '''' theCell{i} ''', '];
        elseif isnumeric(theCell{i}),
                str = [str mat2str(theCell{i}) ', '];
        end;
end;
str = [str(1:end-2) '}'];


function [ggs] = glidergridstim(GGSp, OLDSTIM)

%  NewStim package:  GLIDERGRIDSTIM
%
%  THEGGS = GLIDERGRIDSTIM(PARAMETERS)
%
%  Creates a glidergridstim object.  A glidergridstim allows one to
%  specify a grid on the screen and to specify a distribution of colors which
%  will occupy the squares on the grid.  The value for each square on the grid
%  is chosen randomly and independently for each square.  One of its most common
%  uses is to create a field of 'snow'.
%
%  PARAMETERS can either be the string 'graphical' (which will prompt the user
%  to enter all of the parameter values), the string 'default' (which will
%  use default parameter values), or a structure.  When using 'graphical', one
%  may also use
%
%  GGS = GLIDERGRIDSTIM('graphical',OLDGGS)
%
%  where OLDGGS is a previously created glidergridstim object.  This will
%  set the default parameter values to those of OLDGGS.
%
%  If passing a structure, the structure should have the following fields:
%  (dimensions of parameters are given as [M N]; fields are case-sensitive):
%
%  [1x4] rect         - Location of stimulus on background window
%                       [top_x top_y bottom_x bottom_y]
%  [1x1] angle        - Rotation angle, in degrees (counterclockwise is positive)
%                       (this is a new parameter; it is not an error to exclude it)
%  [1x3] BG           - Background color [r g b]
%  [1x3] FG1          - Color 1 which may appear on the grid squares (corresponds to -1)
%  [1x3] FG2          - Color 2 which may appear on the grid squares (corresponds to 1)
%  [1x1] correlator   - The correlator to use, can be:
%                          0:  2-point left correlator
%                          1:  2-point right correlator
%                          2:  3-point left converging correlator
%                          3:  3-point right converging correlator
%                          4:  3-point left diverging correlator
%                          5:  3-point right diverging correlator
%  [1x1] correlator_sign   -1/1 (negative, positive)
%  [1x1] correlator_version (must be 1)
%  [1x2] pixSize      - Size of blocks in x, y: [X Y].  If X and Y are less
%                       than one, then it uses that fraction of the total
%                       width and height, respectively.  Note that the blocks
%                       must _exactly_ fill up the stimulus rect.
%  [1x1] N            - Number of frames to make
%  [1x1] fps          - Speed at which to show the frames, in frames per second.
% [35x1] randState    - The random state to use as the seed for generating
%                       the random numbers.  Ex:rand('state').  See 'help rand'.
% [cell] dispprefs    - Sets displayprefs fields, or use {} for default values.
%
%   Questions to vanhoosr@brandeis.edu

NewStimListAdd('glidergridstim');

if nargin==0,
	ggs = glidergridstim('default');
	return;
end;

default_p = struct ( 'rect',[0 0 500 100], 'angle',0, 'BG', [128 128 128], 'FG1', [0 0 0], 'FG2', [255 255 255], ...
			'correlator',0,'correlator_sign',1, 'pixSize',[50 50],'N',100,'fps',15,'randState', rand('state'),'correlator_version',1);
default_p.dispprefs = {};
finish = 1;

if nargin==1,
	oldstim=[];
else,
	oldstim = OLDSTIM;
end;

if ischar(GGSp),
	if strcmp(GGSp,'graphical'),
		% load parameters graphically, check values
		p = get_graphical_input(oldstim);
		if isempty(p),
			finish = 0;
		else,
			GGSp = p;
			GGSp.correlator_version = 1;
		end;
	elseif strcmp(GGSp,'default'),
		GGSp = default_p;
	else,
		error('Unknown string input to glidergridstim.');
	end;
else,  % they are just parameters
	[good, err] = verifyglidergridstim(GGSp);
	if ~good, error(['Could not create glidergridstim: ' err]); end;
end;

if finish,
	dp = {'fps', GGSp.fps, 'rect',GGSp.rect, 'frames', 1:GGSp.N, ...
			GGSp.dispprefs{:}};
	s = stimulus(5);
	ggs = class(struct('GGSparams',GGSp),'glidergridstim',s);
	ggs.stimulus = setdisplayprefs(ggs.stimulus,displayprefs(dp));
else,
	ggs = [];
end;

function params = get_graphical_input(oldstim)

if isempty(oldstim),
	rect_str =  '[0 0 800 600]';
	angle_str = '0';
	bg_str = '[128 128 128]';
	fg1_str = '[0 0 0]';
	fg2_str = '[255 255 255]';
	correlator_value = 1;      % first menu choice
	correlator_sign_value = 2; % second choice
	pixSize_str='[50 600]';
	N_str =     '100';
	fps_str =   '4';
	rs_str =    'rand(''state'')';
	dp_str =    '{}';
else,
	oldsP = struct(oldstim);
	GGSparams = oldsP.GGSparams;
	rect_str = mat2str(GGSparams.rect);
	if isfield(GGSparams,'angle'), 
		angle_str = num2str(GGSparams.angle);
	else,
		angle_str = '0';
	end;
	bg_str = mat2str(GGSparams.BG);
	fg1_str = mat2str(GGSparams.FG1);
	fg2_str = mat2str(GGSparams.FG2);
	correlator_value = 1+GGSparams.correlator;
	correlator_sign_value = 1+(0.5*(GGSparams.correlator_sign+1));
	pixSize_str = mat2str(GGSparams.pixSize);	
	N_str = num2str(GGSparams.N);
	fps_str = num2str(GGSparams.fps);
	rs_str = '<copied from previous stim>';
	dp_str = wimpcell2str(GGSparams.dispprefs);
end;

% create figure

h0 = figure('Color',[0.8 0.8 0.8], 'Position',[140   307   488   602]);
settoolbar(h0,'none'); set(h0,'menubar','none');

shift_y = -30;
shift_y2 = -30;

ok_ctl = uicontrol('Parent',h0, 'Units','points',  ...
        'BackgroundColor',[0.7 0.7 0.7], 'FontWeight','bold', ...
        'Position',[36 22 71 27], 'String','OK', 'Tag','Pushbutton1',...
	'Callback', 'set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
	'userdata',0);
cancel_ctl = uicontrol('Parent',h0, 'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], 'FontWeight','bold', ...
        'Position',[173 24 71 27], 'String','Cancel', 'Tag','Pushbutton1', ...
	'Callback', 'set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
	'userdata',0);
h1 = uicontrol('Parent',h0, 'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontWeight','bold', 'Position',[304 25 71 27], 'String','Help', ...
        'Tag','Pushbutton1',...
	'Callback', ...
	'textbox(''glidergridstim help'',help(''glidergridstim''));');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',18, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[42.26500984251969 436.0980561023622 285.2888164370079 24.97477854330709], ...
        'String','New glidergridstim object...', ...
        'Style','text', ...
        'Tag','StaticText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 395.7541830708662 216.1278912401575 19.21136811023622], ...
        'String','[1x4] Rect [top_x top_y bottom_x bottom_y]', ...
        'Style','text', ...
        'Tag','StaticText2');
rect_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  399.5965  123.9133   18.2508], ...
        'String',rect_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 395.7541830708662+shift_y2  216.1278912401575 19.21136811023622], ...
        'String','[1x1] angle [degrees rotation, + clockwise]', ...
        'Style','text', ...
        'Tag','StaticText2');
angle_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  399.5965+shift_y2  123.9133   18.2508], ...
        'String',angle_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 369.8188361220473+shift_y 216.1278912401575 19.21136811023622], ...
        'String','[1x3] background color [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
bg_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  374.6217+shift_y  123.9133   18.2508], ...
        'String',bg_str, ...
        'Style','edit', ...
        'Tag','EditText1');
row = 395.75 - 369.8;

h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 -row+369.8188361220473+shift_y 216.1278912401575 19.21136811023622], ...
        'String','[1x3] FG color "-1" [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
fg1_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  -row+374.6217+shift_y  123.9133   18.2508], ...
        'String',fg1_str, ...
        'Style','edit', ...
        'Tag','EditText1');

h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 -2*row+369.8188361220473+shift_y 216.1278912401575 19.21136811023622], ...
        'String','[1x3] FG color "+1" [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
fg2_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  -2*row+374.6217+shift_y  123.9133   18.2508], ...
        'String',fg2_str, ...
        'Style','edit', ...
        'Tag','EditText1');

h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 -3*row+369.8188361220473+shift_y 216.1278912401575 19.21136811023622], ...
        'String','correlator', ...
        'Style','text', ...
        'Tag','StaticText2');
correlator_ctl = uicontrol('Parent',h0, ...
        'Style','popup', ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  -3*row+374.6217+shift_y  123.9133   18.2508], ...
        'String',{'2-point leftward /','2-point rightward \', '3-point left converging |-', '3-point right converging -|','3-point left diverging _|','3-point right diverging |_'}, ...
	'value', correlator_value, ...
        'Tag','Pop');

h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 -4*row+369.8188361220473+shift_y 216.1278912401575 19.21136811023622], ...
        'String','correlator_sign', ...
        'Style','text', ...
        'Tag','StaticText2');
correlator_sign_ctl = uicontrol('Parent',h0, ...
        'Style','popup', ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247.8266  -4*row+374.6217+shift_y  123.9133   18.2508], ...
        'String',{'-1','+1'},...
	'value', correlator_sign_value,...
        'Tag','Pop');


pixSize_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[314.1058686023622 209.4039124015748+shift_y 57.63410433070867 22.09307332677166], ...
        'String',pixSize_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 204.6010703740158+shift_y 277.6042691929134 22.09307332677166], ...
        'String','[1x2] pixSize (size of grid squares, [ X Y], or faction if X,Y<1', ...
        'Style','text', ...
        'Tag','StaticText2');
N_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[132.5584399606299 187.3108390748032+shift_y 30.73818897637796 18.25079970472441], ...
        'String',N_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 183.4685654527559+shift_y 99.89911417322836 19.21136811023622], ...
        'String','[1x1] N, num frames', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[194.0348  183.4686+shift_y  116.2288   19.2114], ...
        'String','[1x1] frames per second', ...
        'Style','text', ...
        'Tag','StaticText2');
fps_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[320.8298474409449 188.271407480315+shift_y 50.91012549212599 18.25079970472441], ...
        'String',fps_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24.97477854330709 162.3360605314961+shift_y 343.8834891732284 19.21136811023622], ...
        'String','[35x1] randomState: use rand(''state'') or enter a variable name', ...
        'Style','text', ...
        'Tag','StaticText2');
rs_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[28.81705216535431 140.2429872047244+shift_y 342.9229207677166 22.09307332677166], ...
        'String',rs_str, ...
        'Style','edit', ...
        'Tag','EditText1');
dp_ctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[28.81705216535431 93.17513533464567+shift_y 342.9229207677166 22.09307332677166], ...
        'String',dp_str, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position', [24.9748  115.2682+shift_y  343.8835   19.2114], ...
        'String','Set any displayprefs options here: example: {''BGpretime'',1}', ...
        'Style','text', ...
        'Tag','StaticText2');

% check for syntax errors

error_free = 0;

ggsp = [];

while ~error_free,
	drawnow;
	uiwait(h0);

	if get(cancel_ctl,'userdata')==1,
		error_free = 1;
	else, % it was OK
		rect_str = get(rect_ctl,'String');
		bg_str = get(bg_ctl,'String');
		pixSize_str = get(pixSize_ctl,'String');
		N_str = get(N_ctl,'String');
		fps_str = get(fps_ctl,'String');
		rs_str = get(rs_ctl,'String');
		dp_str = get(dp_ctl,'String');
		fg1_str = get(fg1_ctl,'String');
		fg2_str = get(fg2_ctl,'String');
		angle_str = get(angle_ctl,'string');
		correlator_value = get(correlator_ctl,'value');
		correlator_sign_value = get(correlator_sign_ctl,'value');

		so = 1; % syntax_okay;
		try, rect = eval(rect_str);
			catch, errordlg('Syntax error in Rect');so=0; end;
		try, bg = eval(bg_str);
			catch, errordlg('Syntax error in BG');so=0; end;
		try, fg1 = eval(fg1_str);
			catch, errordlg('Syntax error in FG1');so=0; end;
		try, fg2 = eval(fg2_str);
			catch, errordlg('Syntax error in FG2');so=0; end;
		try, pixSize=eval(pixSize_str);
			catch, errordlg('Syntax error in pixsize');so=0; end;
		try, N = eval(N_str);
			catch, errordlg('Syntax error in N'); so=0; end;
		try, fps=eval(fps_str);
			catch, errordlg('Syntax error in fps'); so=0; end;
		try, angle=eval(angle_str);
			catch, errordlg('Syntax error in angle'); so=0; end;
		if strcmp(rs_str,'<copied from previous stim>')&~isempty(oldstim),
			randState = GGSparams.randState;
		else,
			try, randState=eval(rs_str); 
			catch, errordlg('Syntax error in randState');so=0;end
		end;
		try, dp=eval(dp_str); 
			catch, errordlg('Syntax error in displayprefs'); so=0;end;

		if so,
	
			ggsp = struct('rect',rect, 'angle',angle,'BG',bg, 'FG1', fg1, 'FG2', fg2, ...
				'correlator', correlator_value - 1, 'correlator_sign', (correlator_sign_value-1)*2-1,...
				'pixSize',pixSize,'N',N,'fps',fps,'randState',randState);
			ggsp.dispprefs = dp;

			[good, err] = verifyglidergridstim(ggsp);
			if ~good, errordlg(['Parameter value invalid: ' err]);
				set(ok_ctl,'userdata',0);
			else,
				error_free = 1;
			end;
		else,
			set(ok_ctl,'userdata',0);
		end;
	end;
end; % while

if get(ok_ctl,'userdata')==1, params = ggsp; else, params = []; end;
delete(h0);

function str = wimpcell2str(theCell)
 %1-dim cells only, only chars and matricies
str = '{  ';
for i=1:length(theCell),
        if ischar(theCell{i})
                str = [str '''' theCell{i} ''', '];
        elseif isnumeric(theCell{i}),
                str = [str mat2str(theCell{i}) ', '];
        end;
end;
str = [str(1:end-2) '}'];


function [hso] = hartleystim(Hparams,OLDSTIM);

% HARTLEYSTIM - a stimulus that produces the subspace sampling of Ringach et al. 1997
%
%  THEHARTLEYSTIM = HARTLEYSTIM(PARAMETERS)
%
%  Creates a subspace sampling stimulus ("Hartley" subspace) described in
%  Ringach et al. 1997. Each stimulus is a grating 
%
%  The PARAMETERS argument can either be a structure containing the parameters
%  or the string 'graphical'(in which case the user is prompted for the values
%  of the parameters), or the string 'default' (in which case default parameter
%  values are assigned). In the graphical case, the following call is available:
%
%  THEHARTLEYSTIM = HARTLEYSTIM('graphical',OLDSTIM)
%
%  in which case the default parameters presented are based on OLDSTIM.  If the
%  values are being passed, then PARAMETERS should be a structure with the
%  following fields (fields are 1x1 unless indicated):
%
%  
%  [1x4] rect      -   The rectangle on the screen where the stimulus will be
%                      displayed:  [ top_x top_y bottom_x bottom_y ].
%                      If the rectangle is smaller than MxM pixels^2, then
%                      the stimulus will be centered on the rectangle and cut off.
%                      If the rectangle is bigger than the MxM pixel^2 stimulus,
%                      then the stimulus will be scaled to the size of the rectangle.
%
%  windowShape     -   0 rectangle,1 oval (default 0)
%  distance        -   distance of the monitor from the viewer (default 57)
%  M               -   The number of pixels in the stimulus (default 300)
%  K_absmax        -   The maximum value of K to use. Must be <= M (default 20)
%  L_absmax        -   The maximum value of L to use. Must be <= M (default 20)
%  sfmax           -   spatial frequency will be less than SF max (default inf)
%  contrast        -   0-1: 0 means no diff from background, 1 is max difference (default 1)
%  chromhigh       -   RGB value of maximum luminance (default 255*[1 1 1])
%  chromlow        -   RGB value of minimum luminance (default 0*[1 1 1])
%  background      -   luminance of the background (0-1 from chromlow to chromhigh)
%  backdrop        -   luminance of area outside of display region
%                       If [1x1] then it is 0-1 from chromlow to chromhigh
%                       If [1x3] then it specifies actual rgb color
%  [1x1] reps      -   Number of times to repeat each frame (default 15)
%  [1x1] fps       -   Speed at which to show the frames, in frames per second (default 10)
% [35x1] randState -   The random state to use as the seed for generating
%                         the random numbers.  Ex:rand('state').  See 'help rand'.
%
%  See also:  STIMULUS, PERIODICSTIM, STOCHASTICGRIDSTIM, PERIODICSCRIPT

NewStimListAdd('hartleystim');

if nargin==0,
	hso = hartleystim('default');
	return;
end;

finish = 1;

default_p = struct( ...
	'chromhigh',		255*[1 1 1],		...
	'chromlow',		[0 0 0],		...
	'distance',		57,             	...
	'rect',			[000 000 600 600],	...
	'contrast',		1,			...
	'background',		0.5,			...
	'backdrop',		0.5,			...
	'windowShape',		0,			...
	'M',			300,			...
	'K_absmax',		20,			...
	'L_absmax',		20,			...
	'sfmax',		2,			...
	'reps',			15,			...
	'fps',			10,			...
	'randState',		rand('state')		...
                           );
default_p.dispprefs = {};

if nargin==1, oldstim=[]; else, oldstim = OLDSTIM; end;

if ischar(Hparams),
	if strcmp(Hparams,'graphical'),
		% load parameters graphically
                p = get_graphical_input(oldstim);
                if isempty(p), finish = 0; else, Hparams = p; end;
	elseif strcmp(Hparams,'default'),
		Hparams = default_p;
	else,
		error('Unknown string input into periodicstim.');
	end;
else,   % they are just parameters
	[good, err] = verifyhartleystim(Hparams);
	if ~good, error(['Could not create Hartley stim: ' err]); end;
end;

if finish,
	N = 100; % need to calculate rigorously
	dp = {'fps', Hparams.fps, 'rect', Hparams.rect, 'frames', 1:Hparams.reps * N, ...
		Hparams.dispprefs{:}};

	s = stimulus(5);
	data = struct('Hparams', Hparams);
	hso = class(data,'hartleystim',s);
	hso.stimulus = setdisplayprefs(hso.stimulus,displayprefs(dp));
	
else
	hso = [];
end;




%%% GET_GRAPHICAL_INPUT funciton %%%

function params = get_graphical_input(oldstim)

if isempty(oldstim),
	oldstim = hartleystim('default');
end;

Hparams = getparameters(oldstim);

rect_str = mat2str(Hparams.rect);
shape_val = (Hparams.windowShape+1);
distance_str = num2str(Hparams.distance);
M_str = num2str(Hparams.M);
K_absmax_str = num2str(Hparams.K_absmax);
L_absmax_str = num2str(Hparams.L_absmax);
sfmax_str = num2str(Hparams.sfmax);
contrast_str = num2str(Hparams.contrast);

chromhigh_str = mat2str(Hparams.chromhigh);
chromlow_str = mat2str(Hparams.chromlow);
background_str = num2str(Hparams.background);
backdrop_str = mat2str(Hparams.backdrop);

reps_str = mat2str(Hparams.reps);
fps_str = mat2str(Hparams.fps);
rs_str = '<copied from previous stim>';
dp_str = wimpcell2str(Hparams.dispprefs);


% make figure layout
h0 = figure('Color',[0.8 0.8 0.8],'Position',[196 100 415 525]);
settoolbar(h0,'none'); set(h0,'menubar','none');

% window heading
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',18, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[42 476 285 25], ...
        'String','New hartleystim object...', ...
        'Style','text', ...
        'Tag','StaticText1');

% entry for any displaypref options
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 445 344 19], ...
        'String','Set any displayprefs options here: example: {''BGpretime'',1}', ...
        'Style','text', ...
        'Tag','StaticText2');
dp_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 425 365 19], ...
        'String',dp_str, ...
        'Style','edit', ...
        'Tag','EditText1');
		  
% entry for size of stimulus display
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 396 225 15], ...
        'String','[1x4] Rect [top_x top_y bottom_x bottom_y]', ...
        'Style','text', ...
        'Tag','StaticText2');
rect_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[255 396 135 18], ...
        'String',rect_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% stimulus shape entry
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[215 344 90 19], ...
        'String','Shape of stimulus', ...
        'Style','text', ...
        'Tag','StaticText2');
shape_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[308 350 81 16], ...
        'String',{'rectangle','oval'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',shape_val);

% angle of orientation entry		  
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 317 120 19], ...
        'String','[1x1] M (num pixels)', ...
        'Style','text', ...
        'Tag','StaticText2');
M_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 321 40 19], ...
        'String',M_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% spatial frequency entry
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[230 317 130 19], ...
        'String','[1x1] SF max', ...
        'Style','text', ...
        'Tag','StaticText2');
sfmax_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[350 321 40 19], ...
        'String',sfmax_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% temporal frequency entry		  
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 295 130 19], ...
        'String','[1x1] K_absmax', ...
        'Style','text', ...
        'Tag','StaticText2');
K_absmax_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 299 40 19], ...
        'String',K_absmax_str, ...
        'Style','edit', ...
        'Tag','EditText1');

 % number of cycles entry		  
 h1 = uicontrol('Parent',h0, ...
         'Units','pixels', ...
         'BackgroundColor',[0.8 0.8 0.8], ...
         'HorizontalAlignment','left', ...
         'ListboxTop',0, ...
         'Position',[230 295 150 19], ...
         'String','[1x1] L_absmax', ...
         'Style','text', ...
         'Tag','StaticText2');
 L_absmax_ctl = uicontrol('Parent',h0, ...
         'Units','pixels', ...
         'BackgroundColor',[1 1 1], ...
 	   'FontSize',9, ...
         'HorizontalAlignment','left', ...
         'ListboxTop',0, ...
         'Position',[350 299 40 19], ...
         'String',L_absmax_str, ...
         'Style','edit', ...
         'Tag','EditText1');

% distance from screen entry
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 273 150 19], ...
        'String','[1x1] distance to screen (cm)', ...
        'Style','text', ...
        'Tag','StaticText2');
distance_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 277 40 19], ...
        'String',distance_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% contrast value entry		  
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[230 273 125 19], ...
        'String','[1x1] contrast [0..1]', ...
        'Style','text', ...
        'Tag','StaticText2');
contrast_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[350 277 40 19], ...
        'String',contrast_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% background value entry		  
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 251 125 19], ...
        'String','[1x1] background [0..1]', ...
        'Style','text', ...
        'Tag','StaticText2');
background_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 255 40 19], ...
        'String',background_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% backdrop value entry		  
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[230 251 115 19], ...
        'String','[1x1or3] backdrop', ...
        'Style','text', ...
        'Tag','StaticText2');
backdrop_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[330 255 80 19], ...
        'String',backdrop_str, ...
        'Style','edit', ...
        'Tag','EditText1');

h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 229 115 19], ...
        'String','[1x1] repetitions', ...
        'Style','text', ...
        'Tag','StaticText2');
reps_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
	'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 233 40 19], ...
        'String',reps_str, ...
        'Style','edit', ...
        'Tag','EditText1');

h1=uicontrol('Parent',h0,...
        'Units','pixels',...
        'BackgroundColor',[0.8 0.8 0.8],...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25 229-20 115 19], ...
        'String','[1x1] frames / second', ...
        'Style','text', ...
        'Tag','StaticText2');
fps_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'FontSize',9, ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[175 233-20 40 19], ...
        'String',fps_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% chromaticity of periodic stim
h1 = uicontrol('Parent',h0, ...
	'Units','pixels', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'HorizontalAlignment','left', ...
	'ListboxTop',0, ...
	'Position',[230 229 105 19], ...
	'String','high/low color', ...
	'Style','text', ...
	'Tag','StaticText2');
chromhighinp = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
	'ListboxTop',0, ...
        'Position',[320 233 100 19], ...
        'String',chromhigh_str,...
        'Style','Edit', ...
        'Tag',''); ...
chromlowinp = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.8 0.8 0.8]/0.8, ...
	'ListboxTop',0, ...
        'Position',[320 213 100 19], ...
        'String',chromlow_str,...
        'Style','Edit', ...
        'Tag',''); ...

h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[25.9000 163.3000 343.8000 19.2000 ], ...
        'String','[35x1] randomState: use rand(''state'') or enter a variable name', ...
        'Style','text', ...
        'Tag','StaticText2');
rs_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[29.8000 141.2000 342.9000 22 ], ...
        'String',rs_str, ...
        'Style','edit', ...
        'Tag','EditText1');

% OK button
ok_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[36 12.8 71.2 27.2], ...
        'String','OK', ...
        'Tag','Pushbutton1', ...
        'Callback', 'set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
        'userdata',0);
		  
% Cancel button
cancel_ctl = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[172.8 11.2 71.2 27.2], ...
        'String','Cancel', ...
        'Tag','Pushbutton1', ...
        'Callback', 'set(gcbo,''userdata'',[1]);uiresume(gcf);', ...
        'userdata',0);
		  
% Help button
h1 = uicontrol('Parent',h0, ...
        'Units','pixels', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[304 12 71.2 27.2], ...
        'String','Help', 'Callback',...
	'textbox(''Periodicstim Help'',help(''periodicstim''));',...
        'Tag','Pushbutton1');




error_free = 0;

psp = [];

while ~error_free,
	drawnow;
	uiwait(h0);
	
   if get(cancel_ctl,'userdata')==1,
		error_free = 1;
		
	else, % it was OK

		rect_str = get(rect_ctl,'String');
		shape_val = get(shape_ctl,'value');
		dp_str = get(dp_ctl,'String');
		distance_str = get(distance_ctl,'String');
		M_str = get(M_ctl,'String');
		K_absmax_str = get(K_absmax_ctl,'String');
		L_absmax_str = get(L_absmax_ctl,'String');
		sfmax_str = get(sfmax_ctl,'String');
		contrast_str = get(contrast_ctl,'String');
		chromhigh_str= get(chromhighinp,'String');
		chromlow_str= get(chromlowinp,'String');
		background_str = get(background_ctl,'String');
		backdrop_str = get(backdrop_ctl,'String');
		reps_str = get(reps_ctl, 'String');
		fps_str = get(fps_ctl,'String');
		rs_str = get(rs_ctl,'String');
		
		so = 1; % syntax_okay;
		try, dp=eval(dp_str);
			catch, errordlg('Syntax error in displayprefs'); so=0; end;
		try, rect = eval(rect_str);
			catch, errordlg('Syntax error in Rect'); so=0; end;
		shape = shape_val - 1;
		try, distance = eval(distance_str);
			catch, errordlg('Syntax error in distance'); so=0; end;
		try, M = eval(M_str);
			catch, errordlg('Syntax error in M'); so=0; end;
		try, K_absmax = eval(K_absmax_str);
			catch, errordlg('Syntax error in K_absmax'); so=0; end;
		try, L_absmax = eval(L_absmax_str);
			catch, errordlg('Syntax error in L_absmax'); so=0; end;
		try, sfmax = eval(sfmax_str);
			catch, errordlg('Syntax error in sfmax'); so=0; end;
		try, contrast = eval(contrast_str);
			catch, errordlg('Syntax error in contrast'); so=0; end;
 		try, chromhigh= eval(chromhigh_str);
 			catch, errordlg('Syntax error in chromhigh'); so=0; end;
 		try, chromlow= eval(chromlow_str);
 			catch, errordlg('Syntax error in chromlow'); so=0; end;
		try, background = eval(background_str);
			catch, errordlg('Syntax error in background'); so=0; end;
		try, backdrop = eval(backdrop_str);
			catch, errordlg('Syntax error in backdrop'); so=0; end;
		try, reps = eval(reps_str);
			catch, errordlg('Syntax error in repetitions'); so=0; end;
		try, fps = eval(fps_str);
			catch, errordlg('Syntax error in fps'); so=0; end;
		if strcmp(rs_str,'<copied from previous stim>')&~isempty(oldstim),
			randState = Hparams.randState;
		else,
		try, randState=eval(rs_str);
			catch, errordlg('Syntax error in randState');so=0;end
	end;


   	if so,
			
			psp = struct(...
			'rect',rect,'windowShape',shape,'distance',distance,'M',M,'K_absmax',K_absmax,...
			'L_absmax',L_absmax,'sfmax',sfmax,'contrast',contrast, ...
			'chromhigh',chromhigh,'chromlow',chromlow,...
			'background',background,'backdrop',backdrop, ...
			'reps',reps,'fps',fps,'randState',randState);

			psp.dispprefs = dp;

			[good, err] = verifyhartleystim(psp);
			if ~good, 
				errordlg(['Parameter value invalid: ' err]);
				set(ok_ctl,'userdata',0);
			else
				error_free = 1;
			end;
		
		else
			set(ok_ctl,'userdata',0);
		end; % if so
	
		
	end;

end; %while


% if everything is ak, return the entered parameters
if get(ok_ctl,'userdata')==1,
	params = psp;
	
% otherwise return an empty vector
else
	params = [];
end;

delete(h0);


%%% end of GET_GRAPHICAL_INPUT function %%%





%%% WIMPCELL2STR function %%%

function str = wimpcell2str(theCell)
%1-dim cells only, only chars and matricies
str = '{  ';
for i=1:length(theCell),
	if ischar(theCell{i})
		str = [str '''' theCell{i} ''', '];
	elseif isnumeric(theCell{i}),
		str = [str mat2str(theCell{i}) ', '];
	end;
end;
str = [str(1:end-2) '}'];


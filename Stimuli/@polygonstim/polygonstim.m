function [lbs] = polygonstim(LBp,OLDSTIM)

% NewStim package:  POLYGONSTIM
%
%  THEPGS = POLYGONSTIM(PARAMETERS)
%
%  Creates a polygon on a background.  The bar is always drawn in the center of
%  the given rectangle, unless a non-zero offset is provided (see below).
%
%  PARAMETERS can either be the string 'graphical' (which will prompt the user
%  to enter all of the parameter values), the string 'default' (which will use
%  default parameter values), or a structure.  When using 'graphical', one may
%  also use
%
%  THEPGS = POLYGONSTIM('graphical',OLDPGS)
%
%  where THEPGS is a previously created polygonstim object.  This will set the
%  default parameter values to those of OLDPGS.
%
%  If passing a structure, the structure should have the following fields:
%  (dimensions of parameters are given as [M N]; fields are case-sensitive):
%
%  [1x4] rect           - Location of the stimulus on background window
%                         [top_x top_y bottom_x bottom_y]
%  [1x1] shape          - Shape: 0 = rectangle, 1 = polygon
%  [Nx2] points         - If shape is rectangle, then points = [width height]/2,
%                           else, points = [ x1 y1; x2 y2; ...], defining a
%                           polygon centered at 0. Use [0 0] for none.
%  [1x2] distance       - Distance, the viewing distance to the screen
%  [1x1] orientation    - The orientation, in degrees (0 is up).
%  [1x1] units          - 0 = degrees of visual angle, 1 = pixels
%  [1x2] offsetxy       - Offset from center; offsetxy = [x y] in units
%  [1x1] offsettheta    - Offset from center along 'orientation' dimension minus
%                            90 degrees (othogonal to orientation dimension)
%  [1x1] howlong        - How long (in seconds) should the stimulus be on for?
%  [1x3] backdrop       - Backdrop, or the color of the screen outside the
%                            stimulus rectangle.
%  [1x3] background     - Color of the background
%  [1x3] foreground     - Color of the foreground
%  [1x1] contrast       - The bar color will be this fraction between the 
%                            mean of the foreground and background color and the
%                            foreground color.  The rest of the image will be
%                            dark, which means filled with this fraction
%                            between the mean of the foreground and background
%                            color and the background color.
%  [Nx2] remove         - Points to fill with the background color.  Done after
%                         the filling of the foreground so this can be used to
%                         remove part of the polygon.  If shape is rectangle,
%                         then this is just half the width and height again.
%                         Ex: [0 0] or [ 5 3 ]
%  [1x1] smooth         - Smooth with square of width smooth.  Must be >= 1.
% [cell] dispprefs      - Sets displayprefs fields, or use {} for defaults.
%
%  Note that the actual location on the screen will be rounded so the pixels
%  line up with the location requested in degrees as closely as possible.
%
%  Note:  'graphical' not implemented yet for this stim type.
%  
%  See also:  STOCHASTICGRIDSTIM, BLINKINGSTIM, PERIODICSTIM, STIMULUS

   default_p = struct('rect',[0 0 100 100],'shape',0,'points',[10 5],...
        'distance',57,'units',0,'orientation',45,...
        'howlong',5,'backdrop',[0 0 0],'background',[0 0 0],...
        'foreground',[255 255 255],'contrast',1,'remove',[0 0],...
        'offsetxy',[0 0],'offsettheta',0,'smooth',2);
   default_p.dispprefs = {};


NewStimListAdd('polygonstim');

if nargin==0,
	LBparams = struct('rect',[0 0 50 50],'shape',0,'points',[10 5],...
        'distance',57,'units',0,'orientation',45,...
        'howlong',5,'backdrop',[128 128 128],'background',[0 255 0],...
        'foreground',[255 0 0],'contrast',1,'remove',[0 0],...
        'offsetxy',[0 0],'offsettheta',0,'smooth',2);
	LBparams.dispprefs = {};

	lbs = polygonstim(LBparams);
	return;
end;


finish = 1;

if nargin==1, oldstim=[]; else, oldstim = OLDSTIM; end;

if ischar(LBp),
	if strcmp(LBp,'graphical'),
		% load parameters graphically, check values
		if isempty(oldstim), oldstim = polygonstim(default_p);end;
		p = get_graphical_input(oldstim);
		if isempty(p), finish = 0; else, LBp = p; end;
		%LBp = default_p;
	elseif strcmp(LBp,'default'),
		LBp = default_p;
	else,
		error('Unknown string input to polygonstim.');
	end;
else, % they are just parameters
	[good,err] = verifylightbarstim(LBp);
	if ~good, error(['Could not create lightbarstim: ' err]); end;
end;

if finish,
	dp = {'fps',1/LBp.howlong,'rect',LBp.rect,'frames',1,LBp.dispprefs{:}};
	s = stimulus(5);
	lbs = class(struct('LBparams',LBp),'polygonstim',s);
	lbs.stimulus = setdisplayprefs(lbs.stimulus,displayprefs(dp));
else,
	lbs = [];
end;

function params = get_graphical_input(oldstim)

p = getparameters(oldstim);
removestr      = mat2str(p.remove);
pointstr       = mat2str(p.points);
fgstr          = mat2str(p.foreground);
bgstr          = mat2str(p.background);
bdstr          = mat2str(p.backdrop);
rectstr        = mat2str(p.rect);
diststr        = num2str(p.distance);
howlongstr     = num2str(p.howlong);
smoothstr      = num2str(p.smooth);
contraststr    = num2str(p.contrast);
offsetxystr    = mat2str(p.offsetxy);
offsetthetastr = num2str(p.offsettheta);
shapeval       = p.shape + 1;
unitsval       = p.units + 1;
dpstr          = wimpcell2str(p.dispprefs);

h0 = figure('Color',[0.8 0.8 0.8], ...
        'PaperPosition',[18 180 576 432], ...
        'PaperUnits','points', ...
        'Position',[396 366 411 530], ...
        'Tag','Fig1', ...
        'MenuBar','none');
		settoolbar(h0,'none');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'FontSize',18, ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[16 475 185 18], ...
        'String','New polygon stim...', ...
        'Style','text', ...
        'Tag','StaticText1');
removstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[27 111 343 43], ...
        'String',removestr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[26 155 344 29], ...
        'String','remove: if shape is rectangle, then this is [width height] of rectangle to remove; otherwise, this is [nx2] values of points on polygon', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[26 220 344 33], ...
        'String','points: if shape is rectangle, then this is [width height] of rectangle; otherwise, this is [nx2] values of points on polygon', ...
        'Style','text', ...
        'Tag','StaticText2');
pointsstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[28 183 343 43], ...
        'String',pointstr, ...
        'Style','edit', ...
        'Tag','EditText1');
fgstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[248 414 124 18], ...
        'String',fgstr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 409 216 19], ...
        'String','[1x3] foreground color [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
rectstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[248 439 124 18], ...
        'String',rectstr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 435 216 19], ...
        'String','[1x4] Rect [top_x top_y bottom_x bottom_y]', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 386 216 19], ...
        'String','[1x3] background color [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
bgstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[248 391 124 18], ...
        'String',bgstr, ...
        'Style','edit', ...
        'Tag','EditText1');
bdstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[247 365 124 18], ...
        'String',bdstr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 360 216 19], ...
        'String','[1x3] backdrop color [r g b], each in 0..255', ...
        'Style','text', ...
        'Tag','StaticText2');
diststrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[320 336 51 18], ...
        'String',diststr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[171 331 148 19], ...
        'String','[1x1] distance from screen (cm)', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 330 100 19], ...
        'String','[1x1] duration (sec)', ...
        'Style','text', ...
        'Tag','StaticText2');
howlongstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[124 333 39 18], ...
        'String',howlongstr, ...
        'Style','edit', ...
        'Tag','EditText1');
smoothstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[321 312 51 18], ...
        'String',smoothstr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[194 307 116 19], ...
        'String','[1x1] smoothing pixels', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 307 100 19], ...
        'String','[1x1] contrast (0-1)', ...
        'Style','text', ...
        'Tag','StaticText2');
contraststrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[133 311 31 18], ...
        'String',contraststr, ...
        'Style','edit', ...
        'Tag','EditText1');
offsetthetastrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[286 261 87 18], ...
        'String',offsetthetastr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[196 256 90 19], ...
        'String','[1x1] offsettheta', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 256 69 19], ...
        'String','[1x2] offsetxy', ...
        'Style','text', ...
        'Tag','StaticText2');
offsetxystrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[102 260 63 18], ...
        'String',offsetxystr, ...
        'Style','edit', ...
        'Tag','EditText1');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[24 285 38 19], ...
        'String','Shape:', ...
        'Style','text', ...
        'Tag','StaticText2');
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[201 283 39 19], ...
        'String','Units:', ...
        'Style','text', ...
        'Tag','StaticText2');
shapectl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[68 287 101 20], ...
        'String',{'rectangle','polygon'}, ...
        'Style','popupmenu', ...
        'Tag','PopupMenu1', ...
        'Value',shapeval);
unitsctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'ListboxTop',0, ...
        'Min',1, ...
        'Position',[249 288 124 18], ...
        'String','degrees', ...
        'Style','popupmenu', ...
        'Tag','PopupMenu2', ...
        'Value',unitsval);
h1 = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.8 0.8 0.8], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[27 90 344 16], ...
        'String','Set any displayprefs options here: example: {''BGpretime'',1}', ...
        'Style','text', ...
        'Tag','StaticText2');
dispprefsstrc = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[1 1 1], ...
        'HorizontalAlignment','left', ...
        'ListboxTop',0, ...
        'Position',[30 66 343 24], ...
        'String',dpstr, ...
        'Style','edit', ...
        'Tag','EditText1');
okctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[26 19 76 28], ...
        'String','OK', ...
        'Tag','Pushbutton1','userdata',0,...
        'Callback','set(gcbo,''userdata'',1);uiresume(gcf);');
canctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 0.7 0.7 ], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[160 19 76 28], ...
        'String','Cancel', ...
        'Tag','Pushbutton1','userdata',0,...
        'Callback','set(gcbo,''userdata'',1);uiresume(gcf);');
helpctl = uicontrol('Parent',h0, ...
        'Units','points', ...
        'BackgroundColor',[0.7 .7 0.7], ...
        'FontWeight','bold', ...
        'ListboxTop',0, ...
        'Position',[290 19 76 28], ...
        'String','Help', ...
        'Tag','Pushbutton1','Callback',...
        'textbox(''polygonstim help'',help(''periodicstim''));');
set(h0,'UserData',struct('helpctl',helpctl,'canctl',canctl,'okctl',okctl,...
        'dispprefsstrc',dispprefsstrc,'shapectl',shapectl,...
        'unitsctl',unitsctl,'offsetxystrc',offsetxystrc,...
        'offsetthetastrc',offsetthetastrc,'contraststrc',contraststrc,...
        'smoothstrc',smoothstrc,'howlongstrc',howlongstrc,...
        'diststrc',diststrc,'bdstrc',bdstrc,'bgstrc',bgstrc,...
        'rectstrc',rectstrc,'fgstrc',fgstrc,'pointsstrc',pointsstrc,...
        'removstrc',removstrc));

error_free = 0;
while ~error_free,
	drawnow;
	uiwait(h0);

	if get(canctl,'userdata')==1,
		error_free = 1;
	else,
		removestr      = get(removstrc,'String');
		pointstr       = get(pointsstrc,'String');
		fgstr          = get(fgstrc,'String');
		bgstr          = get(bgstrc,'String');
		bdstr          = get(bdstrc,'String');
		rectstr        = get(rectstrc,'String');
		diststr        = get(diststrc,'String');
		howlongstr     = get(howlongstrc,'String');
		smoothstr      = get(smoothstrc,'String');
		contraststr    = get(contraststrc,'String');
		offsetxystr    = get(offsetxystrc,'String');
		offsetthetastr = get(offsetthetastrc,'String');
		shapeval       = get(shapectl,'Value') - 1; %final
		unitsval       = get(unitsctl,'Value') - 1; %final
		dpstr          = get(dispprefsstrc,'String');

		so=1; % syntax okay
		try, rect=eval(rectstr);
		catch,errordlg('Syntax error in rect.');so=0;end;
		try, points=eval(pointstr);
		catch, errordlg('Syntax error in points.');so=0;end;
		try, remove = eval(removestr);
		catch, errordlg('Syntax error in remove.');so=0; end;
		try,fg=eval(fgstr);
		catch,errordlg('Syntax error in foreground.');so=0;end;
		try,bg=eval(bgstr);
		catch,errordlg('Syntax error in background.');so=0;end;
		try,bd=eval(bdstr);
		catch,errordlg('Syntax error in backdrop.');so=0;end;
		try, dist=eval(diststr);
		catch,errordlg('Syntax error in distance.'); so=0;end;
		try, howlong = eval(howlongstr);
		catch, errordlg('Syntax error in duration.');so=0;end;
		try, smooth = eval(smoothstr);
		catch, errordlg('Syntax error in smooth.');so=0;end;
		try, contrast = eval(contraststr);
		catch, errordlg('Syntax error in contrast.');so=0;end;
		try, offsetxy = eval(offsetxystr);
		catch, errordlg('Syntax error in offsetxy.');so=0;end;
		try, offsettheta=eval(offsetthetastr);
		catch, errordlg('Syntax error in offsettheta.');so=0;end;
		try, dp = eval(dpstr);
		catch, errordlg('Syntax error in displayprefs.');so=0;end;
		
		if so, % syntax is okay
			lbp = struct('rect',rect,'shape',shapeval,...
			'points',points,'distance',dist,...
			'orientation',0,'units',unitsval,...
			'offsetxy',offsetxy,'offsettheta',offsettheta,...
			'howlong',howlong,'backdrop',bd,'background',bg,...
			'foreground',fg,'contrast',contrast,...
			'remove',remove,'smooth',smooth);
			lbp.dispprefs = dp;
			[good,err]=verifylightbarstim(lbp);
			if ~good,errordlg(['Parameter value invalid: ' err]);
				set(okctl,'userdata',0);
			else, error_free = 1; end;
		else, set(okctl,'userdata',0); end;
	end;
end;
			
if get(okctl,'userdata')==1, params = lbp; else, params = []; end;
delete(h0);

function str = wimpcell2str(theCell)
 %1-dim cells only, only chars and matricies
str = '{  ';
for i=1:length(theCell),
        if ischar(theCell{i})
                str = [str '''' theCell{i} ''', '];
        elseif isnumeric(theCell{i}),
                str = [str mat2str(theCell{i}) ', '];
        end;
end;
str = [str(1:end-2) '}'];




